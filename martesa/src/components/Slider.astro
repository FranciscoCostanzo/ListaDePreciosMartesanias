---
const { imagenes } = Astro.props;
---

<div class="slider-wrapper">
  <div class="slider">
    {
      imagenes.map((imagen) => (
        <div class="slide">
          <article class="textos__slider">
            <h6>{imagen.nombrePulsera}</h6>
            <span>$ {imagen.precio}</span>
          </article>
          <img src={imagen.img} alt={imagen.nombrePulsera} />
        </div>
      ))
    }
  </div>
  <button class="prev">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="icon icon-tabler icon-tabler-circle-arrow-left"
      width="44"
      height="44"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="#cd679f"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M12 21a9 9 0 1 0 0 -18a9 9 0 0 0 0 18"></path>
      <path d="M8 12l4 4"></path>
      <path d="M8 12h8"></path>
      <path d="M12 8l-4 4"></path>
    </svg>
  </button>
  <button class="next">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      class="icon icon-tabler icon-tabler-circle-arrow-right"
      width="44"
      height="44"
      viewBox="0 0 24 24"
      stroke-width="1.5"
      stroke="#cd679f"
      fill="none"
      stroke-linecap="round"
      stroke-linejoin="round"
    >
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <path d="M12 3a9 9 0 1 0 0 18a9 9 0 0 0 0 -18"></path>
      <path d="M16 12l-4 -4"></path>
      <path d="M16 12h-8"></path>
      <path d="M12 16l4 -4"></path>
    </svg>
  </button>
</div>

<style lang="scss">
  $mar: (
    1: #f8ebf3,
    2: #f3d7e9,
    3: #dc8aba,
    4: #cd679f,
    5: #9f3768,
    sombra: #00000065,
  );

  @function mar($shade) {
    @return map-get($mar, $shade);
  }

  .slider-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    width: 100%;
    height: 400px;
    overflow: hidden;
    border-radius: 12px;
    background-color: mar(1);
  }

  .slider {
    display: flex;
    transition: transform 0.5s ease-in-out;
  }

  .slide {
    min-width: 100%;
    box-sizing: border-box;
    text-align: center;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;

    .textos__slider {
      position: absolute;
      width: 50%;
      text-align: center;
      top: 76%;
      background-color: mar(4);
      color: mar(1);
      border-radius: 8px;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    box-shadow: 0 14px 30px 0 mar(sombra);

      h6 {
        font-size: 20px;
        margin: 0;
        border-bottom: 1px solid mar(1);
        width: fit-content;
      }
      span {
        font-size: 16px;
      }
    }

    img {
      width: 80%;
      height: 300px;
      object-fit: cover;
      border-radius: 8px;
    }
  }

  .prev,
  .next {
    background-color: #9f37688b;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    border-radius: 50%;
    width: 55px;
    height: 55px;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    border: none;
    padding: 10px;
    cursor: pointer;
    z-index: 10;
    transition: background-color 0.3s ease;
    svg {
      width: 55px;
      height: 55px;
      stroke: mar(1);
    }
  }

  .prev {
    left: 10px;
  }

  .next {
    right: 10px;
  }

  .prev:hover,
  .next:hover {
    background-color: mar(5);
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sliders = document.querySelectorAll(".slider-wrapper");

    sliders.forEach((sliderWrapper) => {
      const slider = sliderWrapper.querySelector(".slider");
      const slides = slider.querySelectorAll(".slide");
      const totalSlides = slides.length;
      let slideIndex = 0;

      sliderWrapper.querySelector(".next").addEventListener("click", () => {
        slideIndex = (slideIndex + 1) % totalSlides;
        slider.style.transform = `translateX(-${slideIndex * 100}%)`;
      });

      sliderWrapper.querySelector(".prev").addEventListener("click", () => {
        slideIndex = (slideIndex - 1 + totalSlides) % totalSlides;
        slider.style.transform = `translateX(-${slideIndex * 100}%)`;
      });
    });
  });
</script>
